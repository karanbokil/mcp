name: Automated Code Reviewer
on:
  repository_dispatch:
    types: [code-review]
permissions: read-all
env:
  IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME != '' }}
jobs:
  code-review-acknowledgement:
    name: Automated Code Review Acknowledgement
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      ####################################################
      # Update the status to show that the queued message
      # was received and is being processed
      ####################################################
      - name: Acknowledge Request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api -X PATCH -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -f 'status=in_progress' \
            -f 'output[title]=Automated Code Review ðŸ¤– (beep bop)' \
            -f 'output[summary]=A *fancy* summary' \
            /repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }}

  code-review-processing:
    name: Automated Code Review Processing
    runs-on: ubuntu-latest
    permissions:
      checks: write
    needs: [code-review-acknowledgement]
    outputs:
      result: ${{ steps.report.outputs.result }}
    steps:
      - name: Setup AWS credentials
        id: setup-aws-credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        # secrets.AWS_ROLE_ARN_TO_ASSUME cannot used in `if` when undefined.
        # env.IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME not available at the `if` for job
        if: ${{ env.IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME == 'true' && vars.AWS_REGION }}
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 7200
          mask-aws-account-id: true

      - name: Processing
        id: processor
        if: success()
        timeout-minutes: 1 # 120  ## match the credentials token
        run: |
          ####################################################
          # Sleep to simulate some work
          ####################################################
          sleep 5    # simulate a bit of work
          # sleep 60 # simulate timeout
          # exit 99  # simulate a process failure
          exit 0

      - name: Report Result
        id: report
        if: always()
        run: |
          echo "steps.processor.conclusion: ${{ steps.processor.conclusion }}"
          echo "result=${{ steps.processor.conclusion }}" >> $GITHUB_OUTPUT

  code-review-completion:
    name: Automated Code Review Completion
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      checks: write
    needs: [code-review-acknowledgement, code-review-processing]
    if: always()
    steps:
      - name: Report Processing
        run: |
          gh api -X PATCH -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }} \
            --input - <<- EOF
            {
              "conclusion": "${{ needs.code-review-processing.outputs.result != '' && needs.code-review-processing.outputs.result || needs.code-review-processing.result }}",
              "details_url": "https://aws.amazon.com",
              "output": {
                "title": "Automated Code Review ðŸ¤– (woop wap)",
                "summary": "**Summary**: The run completed ${{ needs.code-review-processing.outputs.result }}.",
                "text": "# Automated Code Review\n\n* Markdown of the code review.\n\n| Syntax      | Description |\n| ----------- | ----------- |\n| Header      | Title       |\n| Paragraph   | Text        |\n"
               }
            }
          EOF
